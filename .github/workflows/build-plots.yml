name: Build F1 Plots

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-plots:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.2'
          use-public-rspm: false
      
      - name: Configure cran4linux RSPM repository
        run: |
          echo "options(repos = c(RSPM = 'https://cran4linux.github.io/rspm/', CRAN = 'https://cloud.r-project.org/'))" >> ~/.Rprofile
          cat ~/.Rprofile
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev
      
      - name: Install R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::remotes
            any::tidyr
            SCasanova/f1dataR
            topfunky/gghighcontrast
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check R code formatting
        run: |
          # Install air if available (skip if not to avoid CI failure)
          # This is optional but recommended for code quality
          command -v air >/dev/null 2>&1 && find . -name "*.R" -not -path "*/renv/*" | xargs air --check || echo "Skipping air formatting check"
      
      - name: Create plots output directory
        run: mkdir -p plots
      
      - name: Run plot generation scripts
        run: |
          chmod +x bin/render_all_plots.sh
          ./bin/render_all_plots.sh
      
      - name: Prepare staging directory
        run: |
          mkdir -p staging
          cp -r plots staging/
          cp README.md staging/ 2>/dev/null || echo "README.md not found, skipping"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: f1-plots
          path: staging/
          include-hidden-files: true
      
      - name: Create step summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY <<EOF
          ## 🏎️ F1 Plots Build Summary
          
          ✅ Plots generated successfully!
          
          ### 📦 Artifacts
          - [Download plots artifact](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          EOF
          
          if [ "${{ github.ref }}" = "refs/heads/main" ] && [ "${{ github.event_name }}" = "push" ]; then
            cat >> $GITHUB_STEP_SUMMARY <<EOF
          ### 🌐 Staging Branch
          - [View staging branch](https://github.com/${{ github.repository }}/tree/staging)
          - [View plots directory](https://github.com/${{ github.repository }}/tree/staging/plots)
          
          EOF
          else
            cat >> $GITHUB_STEP_SUMMARY <<EOF
          ### ℹ️ Note
          Staging branch is only updated on pushes to main branch.
          
          EOF
          fi
          
          cat >> $GITHUB_STEP_SUMMARY <<EOF
          **Generated:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          EOF
      
      - name: Publish to staging branch
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./staging
          publish_branch: staging
          force_orphan: true
